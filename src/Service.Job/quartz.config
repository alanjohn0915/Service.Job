# You can configure your scheduler in either <quartz> configuration section
# or in quartz properties file
# Configuration section has precedence

# configure thread pool info
quartz.threadPool.type = Quartz.Simpl.SimpleThreadPool, Quartz
quartz.threadPool.threadCount = 10
quartz.threadPool.threadPriority = Normal

# job initialization plugin handles our xml reading, without it defaults are used
quartz.plugin.xml.type = Quartz.Plugin.Xml.XMLSchedulingDataProcessorPlugin, Quartz.Plugins
quartz.plugin.xml.fileNames = ~/quartz_jobs.xml

# export this server to remoting context
#quartz.scheduler.exporter.type = Quartz.Simpl.RemotingSchedulerExporter, Quartz
#quartz.scheduler.exporter.port = 555
#quartz.scheduler.exporter.bindName = QuartzScheduler
#quartz.scheduler.exporter.channelType = tcp
#quartz.scheduler.exporter.channelName = httpQuartz

#配置集群
#设置存储类型
quartz.jobStore.type = Quartz.Impl.AdoJobStore.JobStoreTX, Quartz
#驱动类型
quartz.jobStore.driverDelegateType = Quartz.Impl.AdoJobStore.StdAdoDelegate, Quartz
#使用表前缀配置AdoJobStore
quartz.jobStore.tablePrefix = QRTZ_
#数据源名称，于 quartz.dataSource 的属性名一样
quartz.jobStore.dataSource = db_ServiceJob
#数据连接字符串
quartz.dataSource.db_ServiceJob.connectionString = Server=127.0.0.1; Database=db_ServiceJob; User ID = root; Password=123456;port=3306;SslMode = none;CharSet=utf8;pooling=true;Min Pool Size=1;Max Pool Size=300;Connection Timeout=60;
#数据库类型
quartz.dataSource.db_ServiceJob.provider = MySql
#JobDataMaps 中的值只能是字符串，具体可以看官方推荐这样设置的原因
quartz.jobStore.useProperties = true
#数据存储序列号方式
quartz.serializer.type = json
#是否是集群模式
quartz.jobStore.clustered = true
#集群的名称
quartz.scheduler.instanceName = ServiceJob
#自动生成唯一的instanceId
quartz.scheduler.instanceId = AUTO